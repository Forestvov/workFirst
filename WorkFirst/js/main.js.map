{"version":3,"sources":["form.js","ibg.js","mask.js","main.js"],"names":[],"mappingsxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["const postData = async (url, data) => {\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    body: data\r\n  });\r\n\r\n  return await res.text();\r\n};\r\n\r\nconst forms = (state) => {\r\n  const form = document.querySelectorAll('form'),\r\n    inputs = document.querySelectorAll('input'),\r\n    emailInput = document.getElementById('email'),\r\n    messageInput = document.getElementById('message');\r\n\r\n\r\n  const validate = (form_id, email) => {\r\n    var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n    var address = document.forms[form_id].elements[email].value;\r\n    if (reg.test(address) == false) {\r\n      emailInput.classList.add('error')\r\n      emailInput.classList.remove('success')\r\n    } else {\r\n      emailInput.classList.remove('error')\r\n      emailInput.classList.add('success')\r\n    }\r\n  }\r\n\r\n  emailInput.addEventListener('change', () => {\r\n    validate('feedbakForm', 'email')\r\n  })\r\n\r\n\r\n  const message = {\r\n    loading: 'Загрузка...',\r\n    success: 'Спасибо! Скоро мы с вами свяжемся',\r\n    failure: 'Что-то пошло не так...',\r\n    spinner: 'images/spinner.gif',\r\n    ok: 'images/ok.png',\r\n    fail: 'images/error.png'\r\n  };\r\n\r\n  const path = {\r\n    designer: 'server.php',\r\n    question: 'question.php'\r\n  };\r\n\r\n  const clearInputs = () => {\r\n    inputs.forEach(item => {\r\n      item.value = '';\r\n    });\r\n    messageInput.value = '';\r\n  };\r\n\r\n\r\n\r\n    form.forEach(item => {\r\n      item.addEventListener('submit', (e) => {\r\n        e.preventDefault();\r\n  \r\n        let statusMessage = document.createElement('div');\r\n        statusMessage.classList.add('status');\r\n        item.parentNode.appendChild(statusMessage);\r\n  \r\n        item.classList.add('animated', 'fadeOutUp');\r\n        setTimeout(() => {\r\n          item.style.display = 'none';\r\n        }, 400);\r\n  \r\n        let statusImg = document.createElement('img');\r\n        statusImg.setAttribute('src', message.spinner);\r\n        statusImg.classList.add('animated', 'fadeInUp');\r\n        statusMessage.appendChild(statusImg);\r\n  \r\n        let textMessage = document.createElement('div');\r\n        textMessage.textContent = message.loading;\r\n        statusMessage.appendChild(textMessage);\r\n  \r\n        const formData = new FormData(item);\r\n  \r\n        if (item.getAttribute('data-calc') === \"calc\") {\r\n          for (let key in state) {\r\n            formData.append(key, state[key]);\r\n          }\r\n        }\r\n  \r\n        let api;\r\n        item.closest('.popup-design') || item.classList.contains('calc-form') ? api = path.designer : api = path.question;\r\n        console.log(api);\r\n  \r\n        postData(api, formData)\r\n          .then(res => {\r\n            console.log(res);\r\n            statusImg.setAttribute('src', message.ok);\r\n            textMessage.textContent = message.success;\r\n          })\r\n          .catch(() => {\r\n            statusImg.setAttribute('src', message.fail);\r\n            textMessage.textContent = message.failure;\r\n          })\r\n          .finally(() => {\r\n            clearInputs();\r\n            setTimeout(() => {\r\n              statusMessage.remove();\r\n              item.style.display = 'block';\r\n              item.classList.remove('fadeOutUp');\r\n              item.classList.add('fadeInUp');\r\n              emailInput.classList.remove('success')\r\n            }, 5000);\r\n          });\r\n      });\r\n\r\n    });\r\n  \r\n\r\n\r\n\r\n};\r\n\r\nforms();\r\n","function ibg() {\r\n\r\n     let ibg = document.querySelectorAll(\".bg-image\");\r\n     for (var i = 0; i < ibg.length; i++) {\r\n         if (ibg[i].querySelector('img')) {\r\n             ibg[i].style.backgroundImage = 'url(' + ibg[i].querySelector('img').getAttribute('src') + ')';\r\n         }\r\n     }\r\n }\r\n \r\n ibg();","const mask = (selector) => {\r\n\r\n     let setCursorPosition = (pos, elem) => {\r\n         elem.focus();\r\n         \r\n         elem.addEventListener('click', function () {\r\n             if (elem.setSelectionRange) {\r\n                 elem.setSelectionRange(pos, pos);\r\n             } else if (elem.createTextRange) {\r\n                 let range = elem.createTextRange();\r\n \r\n                 range.collapse(true);\r\n                 range.moveEnd('character', pos);\r\n                 range.moveStart('character', pos);\r\n                 range.select();\r\n             }\r\n         });\r\n     };\r\n \r\n     function createMask(event) {\r\n         let matrix = '+7 (___) ___-__-__',\r\n             i = 0,\r\n             def = matrix.replace(/\\D/g, ''),\r\n             val = this.value.replace(/\\D/g, '');\r\n \r\n         if (def.length >= val.length) {\r\n             val = def;\r\n         }\r\n \r\n         this.value = matrix.replace(/./g, function (a) {\r\n             return /[_\\d]/.test(a) && i < val.length ? val.charAt(i++) : i >= val.length ? '' : a;\r\n         });\r\n \r\n         if (event.type === 'blur') {\r\n             if (this.value.length == 2) {\r\n                 this.value = '';\r\n             }\r\n         } else {\r\n             setCursorPosition(this.value.length, this);\r\n         }\r\n     }\r\n \r\n     let inputs = document.querySelectorAll(selector);\r\n \r\n     inputs.forEach(input => {\r\n         input.addEventListener('input', createMask);\r\n         input.addEventListener('focus', createMask);\r\n         input.addEventListener('blur', createMask);\r\n     });\r\n };\r\n\r\n mask(\".feedbak__phone\");","\n/**\n \n  * название функции\n  *\n  * @param {number} first - первое число\n  * @returns {number}\n  */\n\n\n"]}